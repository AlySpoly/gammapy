#
# This travis-ci build matrix config is a modified copy of the one from Astropy
#


# We can't use `language: python` here because it's not supported on Mac.
# But that's OK ... the language here is irrelevant because we use conda
# to install our own Python.
language: c

os:
    - linux

# This is a signal to travis-ci to use the new build infrastructure
sudo: false

addons:
  apt:
    packages: &default_apt
      - graphviz
      - texlive-latex-extra
      - dvipng

env:
    global:
        - NUMPY_VERSION=1.9
        - ASTROPY_VERSION=1.0
        - CONDA_DEPENDENCIES='scipy h5py matplotlib pyyaml scikit-image scikit-learn pandas pyregion naima photutils wcsaxes'
        - PIP_DEPENDENCIES='uncertainties reproject'
        - CONDA_CHANNELS='astropy'
        - FETCH_GAMMAPY_EXTRA=true
        - MAIN_CMD='python setup.py'

    matrix:
        - PYTHON_VERSION=2.7 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.3 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.4 SETUP_CMD='egg_info'


matrix:

    # Don't wait for allowed failures
    fast_finish: true

    include:

        # Try MacOS X
        - os: osx
          env: PYTHON_VERSION=2.7 SETUP_CMD='test'
               CONDA_DEPENDENCIES=''
               PIP_DEPENDENCIES=''

        # Run tests
        # Coverage is measured on Python 2 (where Sherpa is available)
        - os: linux
          env: PYTHON_VERSION=2.7 SETUP_CMD='test -V --coverage'
               CONDA_CHANNELS+='https://conda.anaconda.org/cxc/channel/dev'
               CONDA_DEPENDENCIES+='iminuit sherpa'

        - os: linux
          env: PYTHON_VERSION=3.4 SETUP_CMD='test -V'

        # Build docs
        - os: linux
          env: PYTHON_VERSION=2.7 SETUP_CMD='build_sphinx -w'
               CONDA_CHANNELS+='https://conda.anaconda.org/cxc/channel/dev'
               CONDA_DEPENDENCIES+='iminuit sherpa pygments scipy aplpy'
        - os: linux
          env: PYTHON_VERSION=3.4 SETUP_CMD='build_sphinx -w'
               CONDA_DEPENDENCIES+='pygments scipy aplpy'

        # Run tests without GAMMAPY_EXTRA available
        - os: linux
          env: FETCH_GAMMAPY_EXTRA=false PYTHON_VERSION=3.4 SETUP_CMD='test -V'

        # Test with Astropy dev version
        - os: linux
          env: PYTHON_VERSION=2.7 ASTROPY_VERSION=dev SETUP_CMD='test -V'
               CONDA_CHANNELS+='https://conda.anaconda.org/cxc/channel/dev'
               CONDA_DEPENDENCIES+='iminuit sherpa'
        - os: linux
          env: PYTHON_VERSION=3.4 ASTROPY_VERSION=dev SETUP_CMD='test -V'
        - os: linux
          env: PYTHON_VERSION=2.7 ASTROPY_VERSION=dev SETUP_CMD='build_sphinx -w'
               CONDA_CHANNELS+='https://conda.anaconda.org/cxc/channel/dev'
               CONDA_DEPENDENCIES+='iminuit sherpa pygments scipy aplpy'
        - os: linux
          env: PYTHON_VERSION=3.4 ASTROPY_VERSION=dev SETUP_CMD='build_sphinx -w'

        # Test with with optional dependencies disabled
        - os: linux
          env: PYTHON_VERSION=2.7 SETUP_CMD='test -V'
               CONDA_DEPENDENCIES=''
               PIP_DEPENDENCIES=''
        - os: linux
          env: PYTHON_VERSION=3.4 SETUP_CMD='test -V'
               CONDA_DEPENDENCIES=''
               PIP_DEPENDENCIES=''

        # Test with other numpy versions
        - os: linux
          env: PYTHON_VERSION=3.4 NUMPY_VERSION=dev SETUP_CMD='test -V'
        - os: linux
          env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.8 SETUP_CMD='test -V'
               CONDA_CHANNELS+='https://conda.anaconda.org/cxc/channel/dev'
               CONDA_DEPENDENCIES+='iminuit sherpa'
        - os: linux
          env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.7 SETUP_CMD='test -V'
               CONDA_CHANNELS+='https://conda.anaconda.org/cxc/channel/dev'
               CONDA_DEPENDENCIES+='iminuit sherpa'
        - os: linux
          env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.6 SETUP_CMD='test -V'
               CONDA_CHANNELS+='https://conda.anaconda.org/cxc/channel/dev'
               CONDA_DEPENDENCIES+='iminuit sherpa'

    # You can move builds that temporarily fail because of some non-Gammapy issue here
    # Please add a link to a GH issue that tracks the upstream issue.
    allow_failures:
      - env: PYTHON_VERSION=3.4 NUMPY_VERSION=dev SETUP_CMD='test -V'
      - env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.7 SETUP_CMD='test -V'
             CONDA_CHANNELS+='https://conda.anaconda.org/cxc/channel/dev'
             CONDA_DEPENDENCIES+='iminuit sherpa'

install:
    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda_$TRAVIS_OS_NAME.sh

    - if $FETCH_GAMMAPY_EXTRA; then
          git clone https://github.com/gammapy/gammapy-extra.git $HOME/gammapy-extra
          export GAMMAPY_EXTRA=${HOME}/gammapy-extra
      fi

script:
    - $MAIN_CMD $SETUP_CMD

after_success:
    - if [[ $SETUP_CMD == 'test -V --coverage' ]]; then
          coveralls --rcfile='gammapy/tests/coveragerc';
      fi
